services:
  app:
    build: 
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: eldorado_server
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/eldoradodb"
      REDIS_URL: "redis://redis:6379"
    networks:
      - eldorado_network
    volumes:
      - .:/app
      - /app/node_modules # Prevent overwriting node_modules with local volume

  db:
    image: postgres:15
    container_name: eldorado_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eldoradodb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - eldorado_network

  redis:
    image: redis:latest
    container_name: my_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - eldorado_network

volumes:
  pgdata:
  redisdata:

networks:
  eldorado_network:
